import { handleAns, handleOptions, handleQuestion, handleSubject } from "../redux/slices/teacher";

export const examFields = (examData,error,currQuestion,Options) => {
    return [
        {
          type: "text",
          id: "subject",
          name: "subjectName",
          label: "Subject Name",
          data: examData,
          updateData: handleSubject,
          error: error,
        },
        {
          type: "text",
          id: "question",
          name: "question",
          label: `Question ${currQuestion + 1}`,
          data: examData?.questions?.[currQuestion],
          updateData: handleQuestion,
          currQuestion: currQuestion,
          error: error,
        },
        {
          type: "radio",
          name: "ans",
          id: "op1",
          data: Options,
          updateData: handleAns,
          currQuestion: currQuestion,
          ans: examData?.questions?.[currQuestion]?.answer,
          opIndex: 0,
          error: error,
        },
        {
          type: "text",
          id: "op1",
          name: "op1",
          label: "Option 1",
          data: Options,
          updateData: handleOptions,
          currQuestion: currQuestion,
          opIndex: 0,
          error: error,
        },
        {
          type: "radio",
          name: "ans",
          id: "op2",
          data: Options,
          updateData: handleAns,
          currQuestion: currQuestion,
          ans: examData?.questions?.[currQuestion]?.answer,
          opIndex: 1,
          error: error,
        },
        {
          type: "text",
          id: "op2",
          name: "op2",
          label: "Option 2",
          data: Options,
          updateData: handleOptions,
          currQuestion: currQuestion,
          opIndex: 1,
          error: error,
        },
        {
          type: "radio",
          name: "ans",
          id: "op3",
          data: Options,
          updateData: handleAns,
          currQuestion: currQuestion,
          ans: examData?.questions?.[currQuestion]?.answer,
          opIndex: 2,
          error: error,
        },
        {
          type: "text",
          id: "op3",
          name: "op3",
          label: "Option 3",
          data: Options,
          updateData: handleOptions,
          currQuestion: currQuestion,
          opIndex: 2,
          error: error,
        },
        {
          type: "radio",
          name: "ans",
          id: "op4",
          data: Options,
          updateData: handleAns,
          currQuestion: currQuestion,
          ans: examData?.questions?.[currQuestion]?.answer,
          opIndex: 3,
          error: error,
        },
        {
          type: "text",
          id: "op4",
          name: "op4",
          label: "Option 4",
          data: Options,
          updateData: handleOptions,
          currQuestion: currQuestion,
          opIndex: 3,
          error: error,
        },
      ];
    
}


// const createExamFields = [
//     {
//       type: "text",
//       id: "subject",
//       name: "subjectName",
//       label: "Subject Name",
//       data: examData,
//       updateData: handleSubject,
//       error: error,
//     },
//     {
//       type: "text",
//       id: "question",
//       name: "question",
//       label: `Question ${currQuestion + 1}`,
//       data: examData?.questions?.[currQuestion],
//       updateData: handleQuestion,
//       currQuestion: currQuestion,
//       error: error,
//     },
//     {
//       type: "radio",
//       name: "ans",
//       id: "op1",
//       data: Options,
//       updateData: handleAns,
//       currQuestion: currQuestion,
//       ans: examData?.questions?.[currQuestion]?.answer,
//       opIndex: 0,
//       error: error,
//     },
//     {
//       type: "text",
//       id: "op1",
//       name: "op1",
//       label: "Option 1",
//       data: Options,
//       updateData: handleOptions,
//       currQuestion: currQuestion,
//       opIndex: 0,
//       error: error,
//     },
//     {
//       type: "radio",
//       name: "ans",
//       id: "op2",
//       data: Options,
//       updateData: handleAns,
//       currQuestion: currQuestion,
//       ans: examData?.questions?.[currQuestion]?.answer,
//       opIndex: 1,
//       error: error,
//     },
//     {
//       type: "text",
//       id: "op2",
//       name: "op2",
//       label: "Option 2",
//       data: Options,
//       updateData: handleOptions,
//       currQuestion: currQuestion,
//       opIndex: 1,
//       error: error,
//     },
//     {
//       type: "radio",
//       name: "ans",
//       id: "op3",
//       data: Options,
//       updateData: handleAns,
//       currQuestion: currQuestion,
//       ans: examData?.questions?.[currQuestion]?.answer,
//       opIndex: 2,
//       error: error,
//     },
//     {
//       type: "text",
//       id: "op3",
//       name: "op3",
//       label: "Option 3",
//       data: Options,
//       updateData: handleOptions,
//       currQuestion: currQuestion,
//       opIndex: 2,
//       error: error,
//     },
//     {
//       type: "radio",
//       name: "ans",
//       id: "op4",
//       data: Options,
//       updateData: handleAns,
//       currQuestion: currQuestion,
//       ans: examData?.questions?.[currQuestion]?.answer,
//       opIndex: 3,
//       error: error,
//     },
//     {
//       type: "text",
//       id: "op4",
//       name: "op4",
//       label: "Option 4",
//       data: Options,
//       updateData: handleOptions,
//       currQuestion: currQuestion,
//       opIndex: 3,
//       error: error,
//     },
//   ];
